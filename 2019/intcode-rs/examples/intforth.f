: >= 2DUP = ROT > OR ;
: <= 2DUP = ROT < OR ;
: 0= 0 = ;
: 0<> 0 <> ;
: 0< 0 < ;
: 0> 0 > ;
: 0<= 0 <= ;
: 0>= 0 >= ;

: NEGATE 0 SWAP - ;
: TRUE 1 ;
: FALSE 0 ;

: LITERAL IMMEDIATE ' LIT , , ;
: '(' [ CHAR ( ] LITERAL ;
: ')' [ CHAR ) ] LITERAL ;

: IF IMMEDIATE ' 0BRANCH , HERE @ 0 , ;
: THEN IMMEDIATE DUP HERE @ SWAP - SWAP ! ;
: ELSE IMMEDIATE ' BRANCH , HERE @ 0 , SWAP DUP HERE @ SWAP - SWAP ! ;

: [COMPILE] IMMEDIATE WORD FIND >CFA , ;
: RECURSE IMMEDIATE LATEST @ >CFA , ;

: DOIT TRUE IF 65 EMIT 10 EMIT THEN 66 EMIT 10 EMIT ;
: EMITEVEN DUP 2 MOD 0= IF EMIT 10 EMIT ELSE 33 EMIT 10 EMIT DROP THEN ;
: EMITANY DUP 0<> IF EMIT 10 EMIT THEN ;

: BEGIN IMMEDIATE HERE @ ;
: UNTIL IMMEDIATE ' 0BRANCH , HERE @ - , ;
: AGAIN IMMEDIATE ' BRANCH , HERE @ - , ;
: WHILE IMMEDIATE ' 0BRANCH , HERE @ 0 , ;
: REPEAT IMMEDIATE
         ' BRANCH ,
         SWAP
         HERE @ - ,
         DUP
         HERE @ SWAP -
         SWAP !
;

: UNLESS IMMEDIATE ' NOT , [COMPILE] IF ;

: ( IMMEDIATE
    1
    BEGIN
      KEY
      DUP '(' = IF DROP 1+
                ELSE ')' = IF 1- THEN
                THEN
    DUP 0= UNTIL
    DROP
;

( now we have comments! )

: FAC DUP 0<= IF DROP 1 ELSE DUP 1- RECURSE * THEN ;
: AS BEGIN 65 EMIT 10 EMIT 1- DUP 0= UNTIL ;

: SAFEAS BEGIN DUP 0> WHILE 65 EMIT 10 EMIT 1- REPEAT ;
: BACKFAC DUP 0<= UNLESS DUP 1- RECURSE * ELSE DROP 1 THEN ;
